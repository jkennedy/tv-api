<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />
  <title>Login</title>
  <link type="text/css" rel="stylesheet" href="https://www.gstatic.com/firebasejs/ui/4.6.1/firebase-ui-auth.css" />
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
</head>

<body>
  <!-- The core Firebase JS SDK is always required and must be listed first -->
  <script src="https://www.gstatic.com/firebasejs/7.21.1/firebase-app.js"></script>

  <!-- TODO: Add SDKs for Firebase products that you want to use
         https://firebase.google.com/docs/web/setup#available-libraries -->
  <script src="https://www.gstatic.com/firebasejs/7.21.1/firebase-analytics.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.21.1/firebase-auth.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.21.1/firebase-firestore.js"></script>

  <script>
    // Your web app's Firebase configuration
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    var firebaseConfig = {
      apiKey: "AIzaSyCy-4bk1CLzz69tUowLRr-00NtS4QTCKAM",
      authDomain: "mychannel-1595185361229.firebaseapp.com",
      databaseURL: "https://mychannel-1595185361229.firebaseio.com",
      projectId: "mychannel-1595185361229",
      storageBucket: "mychannel-1595185361229.appspot.com",
      messagingSenderId: "366836412672",
      appId: "1:366836412672:web:f0a954c96a0f60d08343e5",
      measurementId: "G-EN6TND4ZFG"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    firebase.analytics();

    const auth = firebase.auth();
  </script>
  <script>
    var existingUserCredential;

    function authenticateBaseUser(token) {
      firebase.auth().signInWithCustomToken(token).then(credentials => {
        console.log('signed in with custom token');
        console.log(JSON.stringify(credentials));
        existingUserCredential = credentials;
      });
    }

    $.get('/registerUser', function(data) {
      console.log('registerUser');
      console.log(data);
      let userToken = data;
      localStorage.setItem('userToken', userToken);
      authenticateBaseUser(userToken);
    });
  </script>
  <script>
  </script>
  <script>
    async function testdb() {
      try {
        var id = 'K3DYMEHP4CWNH';
        var db = firebase.firestore();
        let doc = db.collection('devices').doc(id);
        let snapshot = await doc.get();
        let entity = snapshot.exists ? snapshot.data() : null;

        console.log('got device:');
        console.log(JSON.stringify(entity));
      } catch (err) {
        console.log(err);
      }
    }

    async function loginGoogle() {
      var provider = new firebase.auth.GoogleAuthProvider();
      provider.addScope('https://www.googleapis.com/auth/userinfo.profile');
      provider.addScope('https://www.googleapis.com/auth/userinfo.email');

      auth.currentUser.signInWithPopup(provider).then(function(result) {
        // Accounts successfully linked.
        var credential = result.credential;
        var user = result.user;
        var token = result.credential.accessToken;

        localStorage.setItem('googleAuthCrediential', credential);

        window.location.assign('/userSettings');
      }).catch(function(error) {
        console.log(error);
      });

      async function linkGoogle() {
        var provider = new firebase.auth.GoogleAuthProvider();
        provider.addScope('https://www.googleapis.com/auth/userinfo.profile');
        provider.addScope('https://www.googleapis.com/auth/userinfo.email');


        auth.currentUser.linkWithPopup(provider).then(function(result) {
          // Accounts successfully linked.
          var credential = result.credential;
          var user = result.user;
          var token = result.credential.accessToken;

          localStorage.setItem('googleAuthCrediential', credential);

          window.location.assign('/userSettings');
        }).catch(function(error) {
          console.log(error);
        });
      }
  </script>
  <button onclick="loginGoogle()">Login Google</button>
  <button onclick="testdb()">Test DB</button>
</body>

</html>
